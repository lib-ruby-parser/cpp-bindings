name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: ${{ matrix.build.name }}
    runs-on: ${{ matrix.build.os }}
    env:
      BUILD_ENV: debug
      TARGET: ${{ matrix.build.target }}
      CXX: ${{ matrix.build.cxx }}
      LD: ${{ matrix.build.ld }}
      AR: ${{ matrix.build.ar }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: test on linux (clang)
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cxx: clang++-12
            ld: ld.lld-12
            ar: llvm-ar-12
            run: make tests/run

          - name: test on mac (clang)
            os: macos-latest
            target: x86_64-apple-darwin
            cxx: clang++
            ld: ld
            ar: ar
            run: |
              $CXX --version
              make tests/run

          - name: test on windows (msvc)
            os: windows-latest
            target: x86_64-pc-windows-msvc
            cxx: cl.exe
            ld: link.exe
            run: |
              make tests/run

          - name: valgrind
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cxx: clang++-12
            ld: ld.lld-12
            ar: llvm-ar-12
            run: |
              sudo apt-get update
              sudo apt-get install -y valgrind libtool-bin
              make tests/runner
              valgrind ./tests/runner

          - name: asan
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            cxx: clang++-12
            ld: ld.lld-12
            ar: llvm-ar-12
            run: ASAN_OPTIONS=detect_leaks=1:alloc_dealloc_mismatch=0 CXXFLAGS="-fsanitize=address" make tests/run

    steps:
      - name: setup msvc on windows
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.build.target }}
          override: true

      - name: print rustc detailed version
        run: rustc --version --verbose

      - name: checkout
        uses: actions/checkout@v2

      - name: codegen
        env:
          RUSTFLAGS: ""
        run: |
          make do-codegen
          make token_ids.hpp

      - name: run tests
        run: ${{ matrix.build.run }}
