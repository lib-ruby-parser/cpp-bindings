name: test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: ${{ matrix.build.target }}
    runs-on: ${{ matrix.build.os }}
    env:
      RUST_BACKTRACE: 1
      CARGO_BUILD_TARGET: ${{ matrix.build.target }}
    strategy:
      fail-fast: false
      matrix:
        build:
          # - { cc: clang-8,  cxx: clang++-8,  ld: ld.lld-8 }
          # - { cc: clang-9,  cxx: clang++-9,  ld: ld.lld-9 }
          # - { cc: clang-10, cxx: clang++-10, ld: ld.lld-10 }
          - { os: windows-latest, target: x86_64-pc-windows-msvc, features: "" }

    steps:
      - name: setup msvc on windows
        uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'

      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.build.target }}
          override: true

      - name: show link.exe
        run: |
          which link.exe
          which -a link.exe

      - name: checkout
        uses: actions/checkout@v2

      - name: build rust object
        shell: bash
        run: |
          RUSTFLAGS="--print=native-static-libs -C linker=\"$(which link.exe)\"" CARGOFLAGS="--features=\"${{ matrix.build.features }}\"" make gen-headers

      # - name: setup clang on windows
      #   # shell: bash
      #   if: runner.os == 'Windows'
      #   run: |
      #     echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append ;


      # - name: setup compiler
      #   run: |
      #     echo "CC=${{ matrix.compiler.cc }}" >> $GITHUB_ENV
      #     echo "CXX=${{ matrix.compiler.cxx }}" >> $GITHUB_ENV
      #     echo "LD=${{ matrix.compiler.ld }}" >> $GITHUB_ENV

      # - name: make sure compiler are available
      #   run: |
      #     which "$CC"
      #     which "$CXX"
      #     which "$LD"

      - name: install valgrind
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y valgrind

      - name: run tests
        shell: bash
        run: |
          CC="cl.exe" CXX="cl.exe" LD="lib.exe" CARGOFLAGS="--features=\"${{ matrix.build.features }}\"" make test-all
